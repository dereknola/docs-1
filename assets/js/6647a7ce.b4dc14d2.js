"use strict";(self.webpackChunkk_3_s_docs=self.webpackChunkk_3_s_docs||[]).push([[353],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),u=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=u(n),m=r,k=d["".concat(s,".").concat(m)]||d[m]||c[m]||o;return n?a.createElement(k,i(i({ref:t},p),{},{components:n})):a.createElement(k,i({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var u=2;u<o;u++)i[u]=n[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5162:function(e,t,n){n.d(t,{Z:function(){return i}});var a=n(7294),r=n(4334),o="tabItem_Ymn6";function i(e){var t=e.children,n=e.hidden,i=e.className;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(o,i),hidden:n},t)}},5488:function(e,t,n){n.d(t,{Z:function(){return m}});var a=n(3117),r=n(7294),o=n(4334),i=n(2389),l=n(7392),s=n(7094),u=n(2466),p="tabList__CuJ",c="tabItem_LNqP";function d(e){var t,n,i=e.lazy,d=e.block,m=e.defaultValue,k=e.values,h=e.groupId,g=e.className,f=r.Children.map(e.children,(function(e){if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),b=null!=k?k:f.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),v=(0,l.l)(b,(function(e,t){return e.value===t.value}));if(v.length>0)throw new Error('Docusaurus error: Duplicate values "'+v.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var y=null===m?m:null!=(t=null!=m?m:null==(n=f.find((function(e){return e.props.default})))?void 0:n.props.value)?t:f[0].props.value;if(null!==y&&!b.some((function(e){return e.value===y})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+y+'" but none of its children has the corresponding value. Available values are: '+b.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var N=(0,s.U)(),w=N.tabGroupChoices,C=N.setTabGroupChoices,S=(0,r.useState)(y),T=S[0],E=S[1],O=[],_=(0,u.o5)().blockElementScrollPositionUntilNextRender;if(null!=h){var R=w[h];null!=R&&R!==T&&b.some((function(e){return e.value===R}))&&E(R)}var x=function(e){var t=e.currentTarget,n=O.indexOf(t),a=b[n].value;a!==T&&(_(t),E(a),null!=h&&C(h,String(a)))},I=function(e){var t,n=null;switch(e.key){case"Enter":x(e);break;case"ArrowRight":var a,r=O.indexOf(e.currentTarget)+1;n=null!=(a=O[r])?a:O[0];break;case"ArrowLeft":var o,i=O.indexOf(e.currentTarget)-1;n=null!=(o=O[i])?o:O[O.length-1]}null==(t=n)||t.focus()};return r.createElement("div",{className:(0,o.Z)("tabs-container",p)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":d},g)},b.map((function(e){var t=e.value,n=e.label,i=e.attributes;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:T===t?0:-1,"aria-selected":T===t,key:t,ref:function(e){return O.push(e)},onKeyDown:I,onClick:x},i,{className:(0,o.Z)("tabs__item",c,null==i?void 0:i.className,{"tabs__item--active":T===t})}),null!=n?n:t)}))),i?(0,r.cloneElement)(f.filter((function(e){return e.props.value===T}))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},f.map((function(e,t){return(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==T})}))))}function m(e){var t=(0,i.Z)();return r.createElement(d,(0,a.Z)({key:String(t)},e))}},3115:function(e,t,n){n.r(t),n.d(t,{assets:function(){return d},contentTitle:function(){return p},default:function(){return h},frontMatter:function(){return u},metadata:function(){return c},toc:function(){return m}});var a=n(3117),r=n(102),o=(n(7294),n(3905)),i=n(5488),l=n(5162),s=["components"],u={title:"Advanced Options and Configuration",weight:45,aliases:["/k3s/latest/en/running/","/k3s/latest/en/configuration/"]},p=void 0,c={unversionedId:"advanced/advanced",id:"advanced/advanced",title:"Advanced Options and Configuration",description:"This section contains advanced information describing the different ways you can run and manage K3s, as well as steps necessary to prepare the host OS for K3s use.",source:"@site/docs/advanced/advanced.md",sourceDirName:"advanced",slug:"/advanced/",permalink:"/docs-k3s/advanced/",draft:!1,editUrl:"https://github.com/k3s-io/docs/edit/main/docs/advanced/advanced.md",tags:[],version:"current",lastUpdatedAt:1673565792,formattedLastUpdatedAt:"Jan 12, 2023",frontMatter:{title:"Advanced Options and Configuration",weight:45,aliases:["/k3s/latest/en/running/","/k3s/latest/en/configuration/"]},sidebar:"mySidebar",previous:{title:"Helm",permalink:"/docs-k3s/helm/"},next:{title:"FAQ",permalink:"/docs-k3s/faq/"}},d={},m=[{value:"Certificate Rotation",id:"certificate-rotation",level:2},{value:"Automatic rotation",id:"automatic-rotation",level:3},{value:"Manual rotation",id:"manual-rotation",level:3},{value:"Auto-Deploying Manifests",id:"auto-deploying-manifests",level:2},{value:"Using Docker as the Container Runtime",id:"using-docker-as-the-container-runtime",level:2},{value:"Using etcdctl",id:"using-etcdctl",level:2},{value:"Configuring containerd",id:"configuring-containerd",level:2},{value:"Running K3s with Rootless mode (Experimental)",id:"running-k3s-with-rootless-mode-experimental",level:2},{value:"Known Issues with Rootless mode",id:"known-issues-with-rootless-mode",level:3},{value:"Running Servers and Agents with Rootless",id:"running-servers-and-agents-with-rootless",level:3},{value:"Advanced Rootless Configuration",id:"advanced-rootless-configuration",level:3},{value:"Troubleshooting",id:"troubleshooting",level:3},{value:"Node Labels and Taints",id:"node-labels-and-taints",level:2},{value:"Starting the Server with the Installation Script",id:"starting-the-server-with-the-installation-script",level:2},{value:"Additional OS Preparations",id:"additional-os-preparations",level:2},{value:"Old iptables versions",id:"old-iptables-versions",level:3},{value:"Red Hat Enterprise Linux / CentOS",id:"red-hat-enterprise-linux--centos",level:3},{value:"Raspberry Pi",id:"raspberry-pi",level:3},{value:"Running K3s in Docker",id:"running-k3s-in-docker",level:2},{value:"SELinux Support",id:"selinux-support",level:2},{value:"Enabling SELinux Enforcement",id:"enabling-selinux-enforcement",level:3},{value:"Enabling Lazy Pulling of eStargz (Experimental)",id:"enabling-lazy-pulling-of-estargz-experimental",level:2},{value:"What&#39;s lazy pulling and eStargz?",id:"whats-lazy-pulling-and-estargz",level:3},{value:"Configure k3s for lazy pulling of eStargz",id:"configure-k3s-for-lazy-pulling-of-estargz",level:3},{value:"Additional Logging Sources",id:"additional-logging-sources",level:2},{value:"Additional Network Policy Logging",id:"additional-network-policy-logging",level:2}],k={toc:m};function h(e){var t=e.components,n=(0,r.Z)(e,s);return(0,o.kt)("wrapper",(0,a.Z)({},k,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"This section contains advanced information describing the different ways you can run and manage K3s, as well as steps necessary to prepare the host OS for K3s use."),(0,o.kt)("h2",{id:"certificate-rotation"},"Certificate Rotation"),(0,o.kt)("h3",{id:"automatic-rotation"},"Automatic rotation"),(0,o.kt)("p",null,"By default, certificates in K3s expire in 12 months."),(0,o.kt)("p",null,"If the certificates are expired or have fewer than 90 days remaining before they expire, the certificates are rotated when K3s is restarted."),(0,o.kt)("h3",{id:"manual-rotation"},"Manual rotation"),(0,o.kt)("p",null,"To rotate the certificates manually, use the ",(0,o.kt)("inlineCode",{parentName:"p"},"k3s certificate rotate")," subcommand:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"# Stop K3s\nsystemctl stop k3s\n# Rotate certificates\nk3s certificate rotate\n# Start K3s\nsystemctl start k3s\n")),(0,o.kt)("p",null,"Individual or lists of certificates can be rotated by specifying the certificate name:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"k3s certificate rotate --service <SERVICE>,<SERVICE>\n")),(0,o.kt)("p",null,"The following certificates can be rotated: ",(0,o.kt)("inlineCode",{parentName:"p"},"admin"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"api-server"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"controller-manager"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"scheduler"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"k3s-controller"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"k3s-server"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"cloud-controller"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"etcd"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"auth-proxy"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"kubelet"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"kube-proxy"),"."),(0,o.kt)("h2",{id:"auto-deploying-manifests"},"Auto-Deploying Manifests"),(0,o.kt)("p",null,"Any file found in ",(0,o.kt)("inlineCode",{parentName:"p"},"/var/lib/rancher/k3s/server/manifests")," will automatically be deployed to Kubernetes in a manner similar to ",(0,o.kt)("inlineCode",{parentName:"p"},"kubectl apply"),", both on startup and when the file is changed on disk. Deleting files out of this directory will not delete the corresponding resources from the cluster."),(0,o.kt)("p",null,"For information about deploying Helm charts, refer to the section about ",(0,o.kt)("a",{parentName:"p",href:"/docs-k3s/helm/"},"Helm.")),(0,o.kt)("h2",{id:"using-docker-as-the-container-runtime"},"Using Docker as the Container Runtime"),(0,o.kt)("p",null,"K3s includes and defaults to ",(0,o.kt)("a",{parentName:"p",href:"https://containerd.io/"},"containerd,")," an industry-standard container runtime."),(0,o.kt)("p",null,"To use Docker instead of containerd,"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Install Docker on the K3s node. One of Rancher's ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/rancher/install-docker"},"Docker installation scripts")," can be used to install Docker:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"curl https://releases.rancher.com/install-docker/20.10.sh | sh\n"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Install K3s using the ",(0,o.kt)("inlineCode",{parentName:"p"},"--docker")," option:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"curl -sfL https://get.k3s.io | sh -s - --docker\n"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Confirm that the cluster is available:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"$ sudo k3s kubectl get pods --all-namespaces\nNAMESPACE     NAME                                     READY   STATUS      RESTARTS   AGE\nkube-system   local-path-provisioner-6d59f47c7-lncxn   1/1     Running     0          51s\nkube-system   metrics-server-7566d596c8-9tnck          1/1     Running     0          51s\nkube-system   helm-install-traefik-mbkn9               0/1     Completed   1          51s\nkube-system   coredns-8655855d6-rtbnb                  1/1     Running     0          51s\nkube-system   svclb-traefik-jbmvl                      2/2     Running     0          43s\nkube-system   traefik-758cd5fc85-2wz97                 1/1     Running     0          43s\n"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Confirm that the Docker containers are running:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'$ sudo docker ps\nCONTAINER ID        IMAGE                     COMMAND                  CREATED              STATUS              PORTS               NAMES\n3e4d34729602        897ce3c5fc8f              "entry"                  About a minute ago   Up About a minute                       k8s_lb-port-443_svclb-traefik-jbmvl_kube-system_d46f10c6-073f-4c7e-8d7a-8e7ac18f9cb0_0\nbffdc9d7a65f        rancher/klipper-lb        "entry"                  About a minute ago   Up About a minute                       k8s_lb-port-80_svclb-traefik-jbmvl_kube-system_d46f10c6-073f-4c7e-8d7a-8e7ac18f9cb0_0\n436b85c5e38d        rancher/library-traefik   "/traefik --configfi\u2026"   About a minute ago   Up About a minute                       k8s_traefik_traefik-758cd5fc85-2wz97_kube-system_07abe831-ffd6-4206-bfa1-7c9ca4fb39e7_0\nde8fded06188        rancher/pause:3.1         "/pause"                 About a minute ago   Up About a minute                       k8s_POD_svclb-traefik-jbmvl_kube-system_d46f10c6-073f-4c7e-8d7a-8e7ac18f9cb0_0\n7c6a30aeeb2f        rancher/pause:3.1         "/pause"                 About a minute ago   Up About a minute                       k8s_POD_traefik-758cd5fc85-2wz97_kube-system_07abe831-ffd6-4206-bfa1-7c9ca4fb39e7_0\nae6c58cab4a7        9d12f9848b99              "local-path-provisio\u2026"   About a minute ago   Up About a minute                       k8s_local-path-provisioner_local-path-provisioner-6d59f47c7-lncxn_kube-system_2dbd22bf-6ad9-4bea-a73d-620c90a6c1c1_0\nbe1450e1a11e        9dd718864ce6              "/metrics-server"        About a minute ago   Up About a minute                       k8s_metrics-server_metrics-server-7566d596c8-9tnck_kube-system_031e74b5-e9ef-47ef-a88d-fbf3f726cbc6_0\n4454d14e4d3f        c4d3d16fe508              "/coredns -conf /etc\u2026"   About a minute ago   Up About a minute                       k8s_coredns_coredns-8655855d6-rtbnb_kube-system_d05725df-4fb1-410a-8e82-2b1c8278a6a1_0\nc3675b87f96c        rancher/pause:3.1         "/pause"                 About a minute ago   Up About a minute                       k8s_POD_coredns-8655855d6-rtbnb_kube-system_d05725df-4fb1-410a-8e82-2b1c8278a6a1_0\n4b1fddbe6ca6        rancher/pause:3.1         "/pause"                 About a minute ago   Up About a minute                       k8s_POD_local-path-provisioner-6d59f47c7-lncxn_kube-system_2dbd22bf-6ad9-4bea-a73d-620c90a6c1c1_0\n64d3517d4a95        rancher/pause:3.1         "/pause"\n')))),(0,o.kt)("h2",{id:"using-etcdctl"},"Using etcdctl"),(0,o.kt)("p",null,"etcdctl provides a CLI for etcd."),(0,o.kt)("p",null,"If you would like to use etcdctl after installing K3s with embedded etcd, install etcdctl using the ",(0,o.kt)("a",{parentName:"p",href:"https://etcd.io/docs/latest/install/"},"official documentation.")," "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'$ VERSION="v3.5.0"\n$ curl -L https://github.com/etcd-io/etcd/releases/download/${VERSION}/etcd-${VERSION}-linux-amd64.tar.gz --output etcdctl-linux-amd64.tar.gz\n$ sudo tar -zxvf etcdctl-linux-amd64.tar.gz --strip-components=1 -C /usr/local/bin etcd-${VERSION}-linux-amd64/etcdctl\n')),(0,o.kt)("p",null,"Then start using etcdctl commands with the appropriate K3s flags:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo etcdctl --cacert=/var/lib/rancher/k3s/server/tls/etcd/server-ca.crt --cert=/var/lib/rancher/k3s/server/tls/etcd/client.crt --key=/var/lib/rancher/k3s/server/tls/etcd/client.key version\n")),(0,o.kt)("h2",{id:"configuring-containerd"},"Configuring containerd"),(0,o.kt)("p",null,"K3s will generate config.toml for containerd in ",(0,o.kt)("inlineCode",{parentName:"p"},"/var/lib/rancher/k3s/agent/etc/containerd/config.toml"),"."),(0,o.kt)("p",null,"For advanced customization for this file you can create another file called ",(0,o.kt)("inlineCode",{parentName:"p"},"config.toml.tmpl")," in the same directory and it will be used instead."),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"config.toml.tmpl")," will be treated as a Go template file, and the ",(0,o.kt)("inlineCode",{parentName:"p"},"config.Node")," structure is being passed to the template. See ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/k3s-io/k3s/blob/master/pkg/agent/templates"},"this folder")," for Linux and Windows examples on how to use the structure to customize the configuration file."),(0,o.kt)("h2",{id:"running-k3s-with-rootless-mode-experimental"},"Running K3s with Rootless mode (Experimental)"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("strong",{parentName:"p"},"Warning:")," This feature is experimental.")),(0,o.kt)("p",null,"Rootless mode allows running the entire k3s an unprivileged user, so as to protect the real root on the host from potential container-breakout attacks."),(0,o.kt)("p",null,"See also ",(0,o.kt)("a",{parentName:"p",href:"https://rootlesscontaine.rs/"},"https://rootlesscontaine.rs/")," to learn about Rootless mode."),(0,o.kt)("h3",{id:"known-issues-with-rootless-mode"},"Known Issues with Rootless mode"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Ports")),(0,o.kt)("p",{parentName:"li"},"When running rootless a new network namespace is created.  This means that K3s instance is running with networking fairly detached from the host.\nThe only way to access Services run in K3s from the host is to set up port forwards to the K3s network namespace.\nRootless K3s includes controller that will automatically bind 6443 and service ports below 1024 to the host with an offset of 10000."),(0,o.kt)("p",{parentName:"li"},"For example, a Service on port 80 will become 10080 on the host, but 8080 will become 8080 without any offset. Currently, only LoadBalancer Services are automatically bound.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Cgroups")),(0,o.kt)("p",{parentName:"li"},'Cgroup v1 and Hybrid v1/v2 are not supported; only pure Cgroup v2 is supported. If K3s fails to start due to missing cgroups when running rootless, it is likely that your node is in Hybrid mode, and the "missing" cgroups are still bound to a v1 controller.')),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Multi-node/multi-process cluster")),(0,o.kt)("p",{parentName:"li"},"Multi-node rootless clusters, or multiple rootless k3s processes on the same node, are not currently supported. See ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/k3s-io/k3s/issues/6488#issuecomment-1314998091"},"#6488")," for more details."))),(0,o.kt)("h3",{id:"running-servers-and-agents-with-rootless"},"Running Servers and Agents with Rootless"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Enable cgroup v2 delegation, see ",(0,o.kt)("a",{parentName:"p",href:"https://rootlesscontaine.rs/getting-started/common/cgroup2/"},"https://rootlesscontaine.rs/getting-started/common/cgroup2/")," .\nThis step is optional, but highly recommended for enabling CPU and memory resource limtitation.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Download ",(0,o.kt)("inlineCode",{parentName:"p"},"k3s-rootless.service")," from ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/k3s-io/k3s/blob/master/k3s-rootless.service"},(0,o.kt)("inlineCode",{parentName:"a"},"https://github.com/k3s-io/k3s/blob/<VERSION>/k3s-rootless.service")),".\nMake sure to use the same version of ",(0,o.kt)("inlineCode",{parentName:"p"},"k3s-rootless.service")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"k3s"),".")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Install ",(0,o.kt)("inlineCode",{parentName:"p"},"k3s-rootless.service")," to ",(0,o.kt)("inlineCode",{parentName:"p"},"~/.config/systemd/user/k3s-rootless.service"),".\nInstalling this file as a system-wide service (",(0,o.kt)("inlineCode",{parentName:"p"},"/etc/systemd/..."),") is not supported.\nDepending on the path of ",(0,o.kt)("inlineCode",{parentName:"p"},"k3s")," binary, you might need to modify the ",(0,o.kt)("inlineCode",{parentName:"p"},"ExecStart=/usr/local/bin/k3s ...")," line of the file.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Run ",(0,o.kt)("inlineCode",{parentName:"p"},"systemctl --user daemon-reload"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Run ",(0,o.kt)("inlineCode",{parentName:"p"},"systemctl --user enable --now k3s-rootless"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Run ",(0,o.kt)("inlineCode",{parentName:"p"},"KUBECONFIG=~/.kube/k3s.yaml kubectl get pods -A"),", and make sure the pods are running."))),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("strong",{parentName:"p"},"Note:")," Don't try to run ",(0,o.kt)("inlineCode",{parentName:"p"},"k3s server --rootless")," on a terminal, as it doesn't enable cgroup v2 delegation.\nIf you really need to try it on a terminal, prepend ",(0,o.kt)("inlineCode",{parentName:"p"},"systemd-run --user -p Delegate=yes --tty")," to create a systemd scope."),(0,o.kt)("p",{parentName:"blockquote"},"i.e., ",(0,o.kt)("inlineCode",{parentName:"p"},"systemd-run --user -p Delegate=yes --tty k3s server --rootless"))),(0,o.kt)("h3",{id:"advanced-rootless-configuration"},"Advanced Rootless Configuration"),(0,o.kt)("p",null,"Rootless K3s uses ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/rootless-containers/rootlesskit"},"rootlesskit")," and ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/rootless-containers/slirp4netns"},"slirp4netns")," to communicate between host and user network namespaces.\nSome of the configuration used by rootlesskit and slirp4nets can be set by environment variables. The best way to set these is to add them to the ",(0,o.kt)("inlineCode",{parentName:"p"},"Environment")," field of the k3s-rootless systemd unit."),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Variable"),(0,o.kt)("th",{parentName:"tr",align:null},"Default"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"K3S_ROOTLESS_MTU")),(0,o.kt)("td",{parentName:"tr",align:null},"1500"),(0,o.kt)("td",{parentName:"tr",align:null},"Sets the MTU for the slirp4netns virtual interfaces.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"K3S_ROOTLESS_CIDR")),(0,o.kt)("td",{parentName:"tr",align:null},"10.41.0.0/16"),(0,o.kt)("td",{parentName:"tr",align:null},"Sets the CIDR used by slirp4netns virtual interfaces.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"K3S_ROOTLESS_ENABLE_IPV6")),(0,o.kt)("td",{parentName:"tr",align:null},"autotedected"),(0,o.kt)("td",{parentName:"tr",align:null},"Enables slirp4netns IPv6 support. If not specified, it is automatically enabled if K3s is configured for dual-stack operation.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"K3S_ROOTLESS_PORT_DRIVER")),(0,o.kt)("td",{parentName:"tr",align:null},"builtin"),(0,o.kt)("td",{parentName:"tr",align:null},"Selects the rootless port driver; either ",(0,o.kt)("inlineCode",{parentName:"td"},"builtin")," or ",(0,o.kt)("inlineCode",{parentName:"td"},"slirp4netns"),". Builtin is faster, but masquerades the original source address of inbound packets.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"K3S_ROOTLESS_DISABLE_HOST_LOOPBACK")),(0,o.kt)("td",{parentName:"tr",align:null},"true"),(0,o.kt)("td",{parentName:"tr",align:null},"Controls whether or not access to the hosts's loopback address via the gateway interface is enabled. It is recommended that this not be changed, for security reasons.")))),(0,o.kt)("h3",{id:"troubleshooting"},"Troubleshooting"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Run ",(0,o.kt)("inlineCode",{parentName:"li"},"systemctl --user status k3s-rootless")," to check the daemon status"),(0,o.kt)("li",{parentName:"ul"},"Run ",(0,o.kt)("inlineCode",{parentName:"li"},"journalctl --user -f -u k3s-rootless")," to see the daemon log"),(0,o.kt)("li",{parentName:"ul"},"See also ",(0,o.kt)("a",{parentName:"li",href:"https://rootlesscontaine.rs/"},"https://rootlesscontaine.rs/"))),(0,o.kt)("h2",{id:"node-labels-and-taints"},"Node Labels and Taints"),(0,o.kt)("p",null,"K3s agents can be configured with the options ",(0,o.kt)("inlineCode",{parentName:"p"},"--node-label")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"--node-taint")," which adds a label and taint to the kubelet. The two options only add labels and/or taints ",(0,o.kt)("a",{parentName:"p",href:"/docs-k3s/reference/agent-config#node-labels-and-taints-for-agents"},"at registration time,")," so they can only be added once and not changed after that again by running K3s commands."),(0,o.kt)("p",null,"If you want to change node labels and taints after node registration you should use ",(0,o.kt)("inlineCode",{parentName:"p"},"kubectl"),". Refer to the official Kubernetes documentation for details on how to add ",(0,o.kt)("a",{parentName:"p",href:"https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/"},"taints")," and ",(0,o.kt)("a",{parentName:"p",href:"https://kubernetes.io/docs/tasks/configure-pod-container/assign-pods-nodes/#add-a-label-to-a-node"},"node labels.")),(0,o.kt)("h2",{id:"starting-the-server-with-the-installation-script"},"Starting the Server with the Installation Script"),(0,o.kt)("p",null,"The installation script will auto-detect if your OS is using systemd or openrc and start the service.\nWhen running with openrc, logs will be created at ",(0,o.kt)("inlineCode",{parentName:"p"},"/var/log/k3s.log"),". "),(0,o.kt)("p",null,"When running with systemd, logs will be created in ",(0,o.kt)("inlineCode",{parentName:"p"},"/var/log/syslog")," and viewed using ",(0,o.kt)("inlineCode",{parentName:"p"},"journalctl -u k3s"),"."),(0,o.kt)("p",null,"An example of installing and auto-starting with the install script:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"curl -sfL https://get.k3s.io | sh -\n")),(0,o.kt)("p",null,"When running the server manually you should get an output similar to the following:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"$ k3s server\nINFO[2019-01-22T15:16:19.908493986-07:00] Starting k3s dev                             \nINFO[2019-01-22T15:16:19.908934479-07:00] Running kube-apiserver --allow-privileged=true --authorization-mode Node,RBAC --service-account-signing-key-file /var/lib/rancher/k3s/server/tls/service.key --service-cluster-ip-range 10.43.0.0/16 --advertise-port 6445 --advertise-address 127.0.0.1 --insecure-port 0 --secure-port 6444 --bind-address 127.0.0.1 --tls-cert-file /var/lib/rancher/k3s/server/tls/localhost.crt --tls-private-key-file /var/lib/rancher/k3s/server/tls/localhost.key --service-account-key-file /var/lib/rancher/k3s/server/tls/service.key --service-account-issuer k3s --api-audiences unknown --basic-auth-file /var/lib/rancher/k3s/server/cred/passwd --kubelet-client-certificate /var/lib/rancher/k3s/server/tls/token-node.crt --kubelet-client-key /var/lib/rancher/k3s/server/tls/token-node.key \nFlag --insecure-port has been deprecated, This flag will be removed in a future version.\nINFO[2019-01-22T15:16:20.196766005-07:00] Running kube-scheduler --kubeconfig /var/lib/rancher/k3s/server/cred/kubeconfig-system.yaml --port 0 --secure-port 0 --leader-elect=false\nINFO[2019-01-22T15:16:20.196880841-07:00] Running kube-controller-manager --kubeconfig /var/lib/rancher/k3s/server/cred/kubeconfig-system.yaml --service-account-private-key-file /var/lib/rancher/k3s/server/tls/service.key --allocate-node-cidrs --cluster-cidr 10.42.0.0/16 --root-ca-file /var/lib/rancher/k3s/server/tls/token-ca.crt --port 0 --secure-port 0 --leader-elect=false \nFlag --port has been deprecated, see --secure-port instead.\nINFO[2019-01-22T15:16:20.273441984-07:00] Listening on :6443                           \nINFO[2019-01-22T15:16:20.278383446-07:00] Writing manifest: /var/lib/rancher/k3s/server/manifests/coredns.yaml \nINFO[2019-01-22T15:16:20.474454524-07:00] Node token is available at /var/lib/rancher/k3s/server/node-token \nINFO[2019-01-22T15:16:20.474471391-07:00] To join node to cluster: k3s agent -s https://10.20.0.3:6443 -t ${NODE_TOKEN} \nINFO[2019-01-22T15:16:20.541027133-07:00] Wrote kubeconfig /etc/rancher/k3s/k3s.yaml\nINFO[2019-01-22T15:16:20.541049100-07:00] Run: k3s kubectl                             \n")),(0,o.kt)("p",null,"The output will likely be much longer as the agent will create a lot of logs. By default, the server\nwill register itself as a node (run the agent)."),(0,o.kt)("h2",{id:"additional-os-preparations"},"Additional OS Preparations"),(0,o.kt)("h3",{id:"old-iptables-versions"},"Old iptables versions"),(0,o.kt)("p",null,"Several popular Linux distributions ship a version of iptables that contain a bug which causes the accumulation of duplicate rules, which negatively affects the performance and stability of the node. See ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/k3s-io/k3s/issues/3117"},"Issue #3117")," for information on how to determine if you are affected by this problem."),(0,o.kt)("p",null,"K3s includes a working version of iptables (v1.8.8) which functions properly. You can tell K3s to use its bundled version of iptables by starting K3s with the ",(0,o.kt)("inlineCode",{parentName:"p"},"--prefer-bundled-bin")," option, or by uninstalling the iptables/nftables packages from your operating system."),(0,o.kt)("admonition",{title:"Version Gate",type:"info"},(0,o.kt)("p",{parentName:"admonition"},"The ",(0,o.kt)("inlineCode",{parentName:"p"},"--prefer-bundled-bin")," flag is available starting with the 2022-12 releases (v1.26.0+k3s1, v1.25.5+k3s1, v1.24.9+k3s1, v1.23.15+k3s1).")),(0,o.kt)("h3",{id:"red-hat-enterprise-linux--centos"},"Red Hat Enterprise Linux / CentOS"),(0,o.kt)("p",null,"It is recommended to turn off firewalld:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"systemctl disable firewalld --now\n")),(0,o.kt)("p",null,"If enabled, it is required to disable nm-cloud-setup and reboot the node:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"systemctl disable nm-cloud-setup.service nm-cloud-setup.timer\nreboot\n")),(0,o.kt)("h3",{id:"raspberry-pi"},"Raspberry Pi"),(0,o.kt)("p",null,"Raspberry Pi OS is Debian based, and may suffer from an old iptables version. See ",(0,o.kt)("a",{parentName:"p",href:"#old-iptables-versions"},"workarounds"),"."),(0,o.kt)("p",null,"Standard Raspberry Pi OS installations do not start with ",(0,o.kt)("inlineCode",{parentName:"p"},"cgroups")," enabled. ",(0,o.kt)("strong",{parentName:"p"},"K3S")," needs ",(0,o.kt)("inlineCode",{parentName:"p"},"cgroups")," to start the systemd service. ",(0,o.kt)("inlineCode",{parentName:"p"},"cgroups"),"can be enabled by appending ",(0,o.kt)("inlineCode",{parentName:"p"},"cgroup_memory=1 cgroup_enable=memory")," to ",(0,o.kt)("inlineCode",{parentName:"p"},"/boot/cmdline.txt"),"."),(0,o.kt)("p",null,"Example cmdline.txt:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"console=serial0,115200 console=tty1 root=PARTUUID=58b06195-02 rootfstype=ext4 elevator=deadline fsck.repair=yes rootwait cgroup_memory=1 cgroup_enable=memory\n")),(0,o.kt)("p",null,"Starting with Ubuntu 21.10, vxlan support on Raspberry Pi has been moved into a separate kernel module. "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo apt install linux-modules-extra-raspi\n")),(0,o.kt)("h2",{id:"running-k3s-in-docker"},"Running K3s in Docker"),(0,o.kt)("p",null,"There are several ways to run K3s in Docker:"),(0,o.kt)(i.Z,{mdxType:"Tabs"},(0,o.kt)(l.Z,{value:"K3d",default:!0,mdxType:"TabItem"},(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/k3d-io/k3d"},"k3d")," is a utility designed to easily run K3s in Docker."),(0,o.kt)("p",null,"It can be installed via the the ",(0,o.kt)("a",{parentName:"p",href:"https://brew.sh/"},"brew")," utility on MacOS:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"brew install k3d\n"))),(0,o.kt)(l.Z,{value:"Docker Compose",mdxType:"TabItem"},(0,o.kt)("p",null,"A ",(0,o.kt)("inlineCode",{parentName:"p"},"docker-compose.yml")," in the K3s repo serves as an ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/k3s-io/k3s/blob/master/docker-compose.yml"},"example")," of how to run K3s from Docker. To run ",(0,o.kt)("inlineCode",{parentName:"p"},"docker-compose")," in this repo, run:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"docker-compose up --scale agent=3\n# kubeconfig is written to current dir\n\nkubectl --kubeconfig kubeconfig.yaml get node\n\nNAME           STATUS   ROLES    AGE   VERSION\n497278a2d6a2   Ready    <none>   11s   v1.13.2-k3s2\nd54c8b17c055   Ready    <none>   11s   v1.13.2-k3s2\ndb7a5a5a5bdd   Ready    <none>   12s   v1.13.2-k3s2\n")),(0,o.kt)("p",null,"To only run the agent in Docker, use ",(0,o.kt)("inlineCode",{parentName:"p"},"docker-compose up agent"),".")),(0,o.kt)(l.Z,{value:"Docker",mdxType:"TabItem"},(0,o.kt)("p",null,"To use Docker, ",(0,o.kt)("inlineCode",{parentName:"p"},"rancher/k3s")," images are also available to run the K3s server and agent.\nUsing the ",(0,o.kt)("inlineCode",{parentName:"p"},"docker run")," command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo docker run \\\n  -d --tmpfs /run \\\n  --tmpfs /var/run \\\n  -e K3S_URL=${SERVER_URL} \\\n  -e K3S_TOKEN=${NODE_TOKEN} \\\n  --privileged rancher/k3s:vX.Y.Z\n")))),(0,o.kt)("h2",{id:"selinux-support"},"SELinux Support"),(0,o.kt)("admonition",{title:"Version Gate",type:"info"},(0,o.kt)("p",{parentName:"admonition"},"Available as of v1.19.4+k3s1")),(0,o.kt)("p",null,"If you are installing K3s on a system where SELinux is enabled by default (such as CentOS), you must ensure the proper SELinux policies have been installed. "),(0,o.kt)(i.Z,{mdxType:"Tabs"},(0,o.kt)(l.Z,{value:"Automatic Installation",default:!0,mdxType:"TabItem"},(0,o.kt)("p",null,"The ",(0,o.kt)("a",{parentName:"p",href:"/docs-k3s/installation/configuration#configuration-with-install-script"},"install script")," will automatically install the SELinux RPM from the Rancher RPM repository if on a compatible system if not performing an air-gapped install. Automatic installation can be skipped by setting ",(0,o.kt)("inlineCode",{parentName:"p"},"INSTALL_K3S_SKIP_SELINUX_RPM=true"),".")),(0,o.kt)(l.Z,{value:"Manual Installation",default:!0,mdxType:"TabItem"},(0,o.kt)("p",null,"The necessary policies can be installed with the following commands:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"yum install -y container-selinux selinux-policy-base\nyum install -y https://rpm.rancher.io/k3s/latest/common/centos/7/noarch/k3s-selinux-0.2-1.el7_8.noarch.rpm\n")),(0,o.kt)("p",null,"To force the install script to log a warning rather than fail, you can set the following environment variable: ",(0,o.kt)("inlineCode",{parentName:"p"},"INSTALL_K3S_SELINUX_WARN=true"),"."))),(0,o.kt)("h3",{id:"enabling-selinux-enforcement"},"Enabling SELinux Enforcement"),(0,o.kt)("p",null,"To leverage SELinux, specify the ",(0,o.kt)("inlineCode",{parentName:"p"},"--selinux")," flag when starting K3s servers and agents."),(0,o.kt)("p",null,"This option can also be specified in the K3s ",(0,o.kt)("a",{parentName:"p",href:"#"},"configuration file"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"selinux: true\n")),(0,o.kt)("p",null,"Using a custom ",(0,o.kt)("inlineCode",{parentName:"p"},"--data-dir")," under SELinux is not supported. To customize it, you would most likely need to write your own custom policy. For guidance, you could refer to the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/containers/container-selinux"},"containers/container-selinux")," repository, which contains the SELinux policy files for Container Runtimes, and the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/rancher/k3s-selinux"},"rancher/k3s-selinux")," repository, which contains the SELinux policy for K3s."),(0,o.kt)("h2",{id:"enabling-lazy-pulling-of-estargz-experimental"},"Enabling Lazy Pulling of eStargz (Experimental)"),(0,o.kt)("h3",{id:"whats-lazy-pulling-and-estargz"},"What's lazy pulling and eStargz?"),(0,o.kt)("p",null,"Pulling images is known as one of the time-consuming steps in the container lifecycle.\nAccording to ",(0,o.kt)("a",{parentName:"p",href:"https://www.usenix.org/conference/fast16/technical-sessions/presentation/harter"},"Harter, et al."),","),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"pulling packages accounts for 76% of container start time, but only 6.4% of that data is read")),(0,o.kt)("p",null,"To address this issue, k3s experimentally supports ",(0,o.kt)("em",{parentName:"p"},"lazy pulling")," of image contents.\nThis allows k3s to start a container before the entire image has been pulled.\nInstead, the necessary chunks of contents (e.g. individual files) are fetched on-demand.\nEspecially for large images, this technique can shorten the container startup latency."),(0,o.kt)("p",null,"To enable lazy pulling, the target image needs to be formatted as ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/containerd/stargz-snapshotter/blob/main/docs/stargz-estargz.md"},(0,o.kt)("em",{parentName:"a"},"eStargz")),".\nThis is an OCI-alternative but 100% OCI-compatible image format for lazy pulling.\nBecause of the compatibility, eStargz can be pushed to standard container registries (e.g. ghcr.io) as well as this is ",(0,o.kt)("em",{parentName:"p"},"still runnable")," even on eStargz-agnostic runtimes."),(0,o.kt)("p",null,"eStargz is developed based on the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/google/crfs"},"stargz format proposed by Google CRFS project")," but comes with practical features including content verification and performance optimization.\nFor more details about lazy pulling and eStargz, please refer to ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/containerd/stargz-snapshotter"},"Stargz Snapshotter project repository"),"."),(0,o.kt)("h3",{id:"configure-k3s-for-lazy-pulling-of-estargz"},"Configure k3s for lazy pulling of eStargz"),(0,o.kt)("p",null,"As shown in the following, ",(0,o.kt)("inlineCode",{parentName:"p"},"--snapshotter=stargz")," option is needed for k3s server and agent."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"k3s server --snapshotter=stargz\n")),(0,o.kt)("p",null,"With this configuration, you can perform lazy pulling for eStargz-formatted images.\nThe following example Pod manifest uses eStargz-formatted ",(0,o.kt)("inlineCode",{parentName:"p"},"node:13.13.0")," image (",(0,o.kt)("inlineCode",{parentName:"p"},"ghcr.io/stargz-containers/node:13.13.0-esgz"),").\nWhen the stargz snapshotter is enabled, K3s performs lazy pulling for this image."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: v1\nkind: Pod\nmetadata:\n  name: nodejs\nspec:\n  containers:\n  - name: nodejs-estargz\n    image: ghcr.io/stargz-containers/node:13.13.0-esgz\n    command: [\"node\"]\n    args:\n    - -e\n    - var http = require('http');\n      http.createServer(function(req, res) {\n        res.writeHead(200);\n        res.end('Hello World!\\n');\n      }).listen(80);\n    ports:\n    - containerPort: 80\n")),(0,o.kt)("h2",{id:"additional-logging-sources"},"Additional Logging Sources"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://rancher.com/docs/rancher/v2.6/en/logging/helm-chart-options/"},"Rancher logging")," for K3s can be installed without using Rancher. The following instructions should be executed to do so:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"helm repo add rancher-charts https://charts.rancher.io\nhelm repo update\nhelm install --create-namespace -n cattle-logging-system rancher-logging-crd rancher-charts/rancher-logging-crd\nhelm install --create-namespace -n cattle-logging-system rancher-logging --set additionalLoggingSources.k3s.enabled=true rancher-charts/rancher-logging\n")),(0,o.kt)("h2",{id:"additional-network-policy-logging"},"Additional Network Policy Logging"),(0,o.kt)("p",null,"Packets dropped by network policies can be logged. The packet is sent to the iptables NFLOG action, which shows the packet details, including the network policy that blocked it."),(0,o.kt)("p",null,"To convert NFLOG to log entries, install ulogd2 and configure ",(0,o.kt)("inlineCode",{parentName:"p"},"[log1]")," to read on ",(0,o.kt)("inlineCode",{parentName:"p"},"group=100"),". Then, restart the ulogd2 service for the new config to be committed."),(0,o.kt)("p",null,"Packets hitting the NFLOG action can also be read by using tcpdump:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"tcpdump -ni nflog:100\n")),(0,o.kt)("p",null,"Note however that in this case, the network policy that blocked the packet will not be shown."),(0,o.kt)("p",null,"When a packet is blocked by network policy rules, a log message will appear in ",(0,o.kt)("inlineCode",{parentName:"p"},"/var/log/ulog/syslogemu.log"),'. If there is a lot of traffic, the logging file could grow very fast. To control that, set the "limit" and "limit-burst" iptables parameters approprietly by adding the following annotations to the network policy in question:'),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"* kube-router.io/netpol-nflog-limit=<LIMIT-VALUE>\n* kube-router.io.io/netpol-nflog-limit-burst=<LIMIT-BURST-VALUE>\n")),(0,o.kt)("p",null,"Default values are ",(0,o.kt)("inlineCode",{parentName:"p"},"limit=10/minute")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"limit-burst=10"),". Check the iptables manual for more information on the format and possible values for these fields."))}h.isMDXComponent=!0}}]);